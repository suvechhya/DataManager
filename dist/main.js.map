{"version":3,"sources":["webpack://dataManager/webpack/universalModuleDefinition","webpack://dataManager/./app/main.js","webpack://dataManager/external \"fs\"","webpack://dataManager/webpack/bootstrap","webpack://dataManager/webpack/runtime/compat get default export","webpack://dataManager/webpack/runtime/define property getters","webpack://dataManager/webpack/runtime/hasOwnProperty shorthand","webpack://dataManager/webpack/runtime/make namespace object","webpack://dataManager/webpack/startup"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;;;;;;;;;;ACVA,CAAoB;;AAEpB;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,sDAAe;AACpC;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,sDAAe;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE,UAAU;AAC/E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,uCAAuC,cAAc,iCAAiC,aAAa,QAAQ,iCAAiC;AAC5I;AACA;AACA;AACA;;AAEA,iEAAe,WAAW,E;;;;;;;;;;;;;;ACzE1B,gC;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dataManager\"] = factory();\n\telse\n\t\troot[\"dataManager\"] = factory();\n})(global, function() {\nreturn ","import fs from 'fs';\n\nclass DataManager {\n    constructor(schema = [], data = []) {\n        this.schema = schema;\n        this.data = data;\n    }\n\n    loadData(pathToFile) {\n        const data = fs.readFileSync(pathToFile, 'utf8');\n        if (data) {\n            this.data = JSON.parse(data);\n        }\n    }\n\n    loadSchema(pathToSchema) {\n        const schema = fs.readFileSync(pathToSchema, 'utf8');\n        if (schema) {\n            this.schema = JSON.parse(schema).schema;\n        }\n    }\n\n    formulateData(schema, data) {\n        let finalData = [];\n        for (const item of data) {\n            const obj = {};\n            for (const { name } of schema) {\n                obj[name] = item[name];\n            }\n            finalData.push(obj);\n        }\n        return finalData;\n    }\n\n    show() {\n        console.table(this.formulateData(this.schema, this.data));\n    }\n\n    select(condition) {\n        const filteredData = this.data.filter((item) => eval(`item.${condition}`));\n        return new DataManager(this.schema, filteredData);\n    }\n\n    project(columns) {\n        const schema = this.schema.filter((field) => columns.includes(field.name));\n        return new DataManager(schema, this.data);\n    }\n\n    groupBy(column) {\n        const columnsRequired = this.schema.filter((col) => col.type === 'measure' || col.name === column);\n        const filteredData = this.formulateData(columnsRequired, this.data);\n        const groupedData = Array.from(\n            filteredData.reduce((m, o) => {\n                var temp = m.get(o[column]);\n                if (!temp) {\n                    m.set(o[column], temp = {});\n                }\n                Object.entries(o).forEach(([k, v]) => {\n                    if (k === column) {\n                        return;\n                    }\n                    temp[k] = temp[k] || { sum: 0, count: 0 };\n                    temp[k].sum += v;\n                    temp[k].count++;\n                });\n                return m;\n            }, new Map),\n            ([k, v]) => Object.assign({ [column]: k }, ...Object.entries(v).map(([l, { sum, count }]) => ({ [l]: +(sum / count).toFixed(1) })))\n        );\n        return new DataManager(columnsRequired, groupedData);\n    }\n}\n\nexport default DataManager;","module.exports = require(\"fs\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(\"./app/main.js\");\n"],"sourceRoot":""}